{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/ContactsView.js"],"names":["module","exports","ContactForm","state","name","number","handleInputChange","ev","target","value","setState","handleSubmit","preventDefault","props","contacts","find","item","toLowerCase","alert","onSubmit","resetForm","this","className","s","wrapper","label","type","onChange","btnSubmit","Component","connect","contactsSelectors","getAllContacts","dispatch","contact","contactsOperations","addContact","ContactList","fetchContacts","contactList","onDeleteContact","isLaodingContacts","map","id","element","btn","onClick","getIsLoading","getFilteredContacts","deleteContact","filterValue","getFilter","onToFilter","changeFilter","size","ContactsView"],"mappings":"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","file":"static/js/3.e3276ef2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactForm_wrapper__tRUzc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"ContactList_element__2CEjD\",\"btn\":\"ContactList_btn__Y6R_4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__2QAl1\"};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\r\n\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleInputChange = (ev) => {\r\n    const { name, value } = ev.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    const { name } = this.state;\r\n    const { contacts } = this.props;\r\n\r\n    const uniqueContact = contacts.find(\r\n      (item) => item.name.toLowerCase() === name.toLowerCase()\r\n    );\r\n    if (uniqueContact) {\r\n      alert(`${name} уже есть в списке ваших контактов`);\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={s.wrapper} onSubmit={this.handleSubmit}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Phone\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <button className={s.btnSubmit} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactsSelectors.getAllContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (contact) => dispatch(contactsOperations.addContact(contact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nclass ContactList extends Component {\r\n  static propTypes = {\r\n    contactList: PropTypes.array.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n  };\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    const { contactList, onDeleteContact, isLaodingContacts } = this.props;\r\n    return (\r\n      <>\r\n        {isLaodingContacts && <h1>Loading..</h1>}\r\n        <ul>\r\n          {contactList.map(({ id, name, number }) => (\r\n            <li className={s.element} key={id}>\r\n              <p>{name}: </p> <p>{number}</p>\r\n              <button\r\n                className={s.btn}\r\n                type=\"button\"\r\n                onClick={() => onDeleteContact(id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst { getIsLoading, getFilteredContacts } = contactsSelectors;\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLaodingContacts: getIsLoading(state),\r\n  contactList: getFilteredContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(contactsOperations.deleteContact(id)),\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { contactsSelectors, changeFilter } from \"../../redux/contacts\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filterValue, onToFilter }) => {\r\n  return (\r\n    <form className={s.wrapper}>\r\n      <label>\r\n        Find contacts by name{\" \"}\r\n        <input\r\n          type=\"text\"\r\n          value={filterValue}\r\n          onChange={onToFilter}\r\n          size=\"30\"\r\n        />\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterValue: PropTypes.string.isRequired,\r\n  onToFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filterValue: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onToFilter: (ev) => dispatch(changeFilter(ev.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport ContactForm from \"../components/ContactForm\";\r\nimport ContactList from \"../components/ContactList\";\r\nimport Filter from \"../components/Filter\";\r\n\r\nconst ContactsView = () => {\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsView;\r\n"],"sourceRoot":""}